<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
    <AssemblyName>DissonanceEngine</AssemblyName>
    <RootNamespace>GameEngine</RootNamespace>
    <Platforms>AnyCPU;x64;x86</Platforms>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Optimize>false</Optimize>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <Optimize>true</Optimize>
  </PropertyGroup>
  
  <Import Project="$(SolutionDir)SolutionDefines.targets" Condition="exists('$(SolutionDir)SolutionDefines.targets')" />
  
  <ItemGroup>
    <Compile Remove="References\**" />
    <EmbeddedResource Remove="References\**" />
    <None Remove="References\**" />
  </ItemGroup>
  
  <ItemGroup>
    <None Include="References\BulletSharp.dll" />
    <None Include="References\Ionic.Zip.dll" />
    <None Include="References\Newtonsoft.Json.dll" />
    <None Include="References\NVorbis.dll" />
    <None Include="References\System.Runtime.CompilerServices.Unsafe.dll" />
    <None Include="References\System.Text.Encoding.CodePages.dll" />
  </ItemGroup>
  
  <ItemGroup>
    <ProjectReference Include="..\..\DissonanceFramework\Src\DissonanceFramework.csproj" />
  </ItemGroup>
  
  <ItemGroup>
    <Reference Include="Ionic.Zip">
      <HintPath>References\Ionic.Zip.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="Newtonsoft.Json">
      <HintPath>References\Newtonsoft.Json.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="NVorbis">
      <HintPath>References\NVorbis.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="System.Text.Encoding.CodePages">
      <HintPath>References\System.Text.Encoding.CodePages.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="if exist &quot;$(SolutionDir)PostBuild.bat&quot; (&#xD;&#xA;    echo Running solution's PostBuild.bat...&#xD;&#xA;    call &quot;$(SolutionDir)PostBuild.bat&quot; &quot;$(ProjectName)&quot; &quot;$(TargetPath)&quot; &quot;$(SolutionDir)&quot; &quot;$(TargetFileName)&quot;&#xD;&#xA;) else (&#xD;&#xA;    echo Solution's PostBuild.bat is not present.&#xD;&#xA;)" />
  </Target>

</Project>
